<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.buddies">

    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage"
        android:maxSdkVersion="18"/>

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the "MyLocation" functionality.
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <!--
        Add this permission request in order to avoid the error:
        "If you need access to FINE location, you must request both ACCESS_FINE_LOCATION and ACCESS_COARSE_LOCATION"
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

    <!--
        Use these <uses-feature> tags in order to allow location gathering from both gps and network providers
        (Source: https://stackoverflow.com/a/55300972/2196301)

        Note: These tags are Needed only if your app targets Android 5.0 (API level 21) or higher.
    -->ge
    <uses-feature android:name="android.hardware.location.gps" />
    <uses-feature android:name="android.hardware.location.network" />

    <!--
        Use here networkSecurityConfig in order to solve the "Cleartext HTTP traffic not permitted" error
        (Source: https://stackoverflow.com/a/50834600/2196301)
    -->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Buddies"
        android:networkSecurityConfig="@xml/network_security_config"
        tools:targetApi="n">

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.example.android.fileprovider${applicationId}"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />


        <activity
            android:name=".activities.MainActivity"
            android:exported="true"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:launchMode="singleTask">
        </activity>

        <activity android:name=".activities.SplashActivity"
            android:exported="true"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:launchMode="singleTask">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>

        <service
            android:name=".service.MyFirebaseMessagingService"
            android:exported="false"
            android:enabled="true">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
                <action android:name="android.intent.action.RESPOND_VIA_MESSAGE"/>
            </intent-filter>
        </service>

        <service android:name=".BroadcastReceiver.MyBroadcastReceiver"
            android:exported="false"
            android:enabled="true">
            <intent-filter>
                <action android:name="android.intent.action.RESPOND_VIA_MESSAGE"/>
            </intent-filter>
        </service>

    </application>
</manifest>