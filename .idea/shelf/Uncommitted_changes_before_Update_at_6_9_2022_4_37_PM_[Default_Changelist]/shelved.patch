Index: app/src/main/java/com/example/buddies/fragments/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.buddies.fragments;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.icu.text.SimpleDateFormat;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.provider.MediaStore;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.content.FileProvider;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.buddies.BuildConfig;\r\nimport com.example.buddies.R;\r\nimport com.example.buddies.ViewModel.ViewModel;\r\nimport com.example.buddies.common.AppUtils;\r\nimport com.example.buddies.common.UserProfile;\r\nimport com.example.buddies.enums.eDogGender;\r\nimport com.example.buddies.interfaces.HandleUserProfileEvent.ILoadUserProfileRequestEventHandler;\r\nimport com.example.buddies.interfaces.HandleUserProfileEvent.ILoadUserProfileResponseEventHandler;\r\nimport com.example.buddies.interfaces.MVVM.IView;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class ProfileFragment extends Fragment implements IView,\r\n                                                         ILoadUserProfileRequestEventHandler,\r\n                                                         ILoadUserProfileResponseEventHandler {\r\n\r\n    public  static final String PROFILE_FRAGMENT_TAG = \"profile_fragment\";\r\n\r\n    ActivityResultLauncher<Intent> takePictureActivityResultLauncher;\r\n    ActivityResultLauncher<String> pickFromGalleryActivityResultLauncher;\r\n\r\n    private String imgUri = \"\";\r\n    private String currentPhotoPath;\r\n\r\n    EditText m_FullNameEt, m_AgeEt;\r\n    ImageButton cameraBtn, galleryBtn;\r\n    Button resetImgBtn;\r\n    ImageView imageView;\r\n\r\n    // need to add current image.\r\n    RadioGroup m_radioGroup;\r\n    RadioButton m_radioButton;\r\n    eDogGender m_dogGender = eDogGender.UNINITIALIZED;\r\n\r\n    Handler m_ProfileFragmentHandler = new Handler(Looper.getMainLooper());\r\n\r\n    ViewModel m_ViewModel = ViewModel.getInstance();\r\n    Context m_Context = null;\r\n\r\n    interface IOnSaveListener {\r\n        void onSave();\r\n    }\r\n\r\n    IOnSaveListener onSaveListener;\r\n\r\n    // Initialize both ActivityResultLaunchers.\r\n    @Override\r\n    public void onAttach(@NonNull Context context)\r\n    {\r\n        this.m_Context = context;\r\n        super.onAttach(context);\r\n\r\n        Fragment homeFragment = getParentFragmentManager().findFragmentByTag(HomeFragment.HOME_FRAGMENT_TAG);\r\n        try {\r\n            onSaveListener = (IOnSaveListener) homeFragment;\r\n        } catch (ClassCastException ex) {\r\n            throw new ClassCastException(\"Fragment must implement IOnSaveListener interface.\");\r\n        }\r\n\r\n        // Source - Capture image with camera - https://www.youtube.com/watch?v=RaOyw84625w\r\n        // After taking a picture - load into ImageView, and save URI to imgUri.\r\n        takePictureActivityResultLauncher = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                new ActivityResultCallback<ActivityResult>() {\r\n                    @Override\r\n                    public void onActivityResult(ActivityResult result) {\r\n                        // Check condition. In case camera opened and closed.\r\n                        if (result.getResultCode() == Activity.RESULT_OK) {\r\n                            Glide.with(Objects.requireNonNull(ProfileFragment.this.m_Context)).\r\n                                    load(currentPhotoPath).circleCrop().into(imageView);\r\n                            imgUri = currentPhotoPath;\r\n                        }\r\n                    }\r\n                }\r\n        );\r\n\r\n        // Source - Open file manager and pick photo (get Uri) - https://www.youtube.com/watch?v=cXyeozbLqq0\r\n        // After picking from gallery - Load into ImageView, and save URI as String to imgUri.\r\n        pickFromGalleryActivityResultLauncher = registerForActivityResult(\r\n                new ActivityResultContracts.GetContent(),\r\n                new ActivityResultCallback<Uri>() {\r\n                    @Override\r\n                    public void onActivityResult(Uri result) {\r\n                        if (result != null) {\r\n                            Glide.with(Objects.requireNonNull(ProfileFragment.this.m_Context)).\r\n                                    load(result).circleCrop().into(imageView);\r\n                            imgUri = result.toString();\r\n                        }\r\n                    }\r\n                }\r\n        );\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        m_ViewModel.registerForEvents((IView)this);\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    // Inflate fragment_profile.\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        View view = inflater.inflate(R.layout.fragment_profile, container, false);\r\n        return view;\r\n    }\r\n\r\n    // Handle profile editing.\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        ImageButton backBtn = view.findViewById(R.id.profile_back_button);\r\n        backBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                getParentFragmentManager().popBackStack();\r\n            }\r\n        });\r\n\r\n        imageView = view.findViewById(R.id.profile_image_view);\r\n\r\n        // Request for camera permission.\r\n        if (ContextCompat.checkSelfPermission(Objects.requireNonNull(this.m_Context), Manifest.permission.CAMERA) !=\r\n                PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(Objects.requireNonNull(getActivity()),\r\n                    new String[] { Manifest.permission.CAMERA }, 100);\r\n        }\r\n        // Request for gallery permission.\r\n        if (ContextCompat.checkSelfPermission(this.m_Context, Manifest.permission.READ_EXTERNAL_STORAGE) !=\r\n                PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(requireActivity(),\r\n                    new String[] {Manifest.permission.READ_EXTERNAL_STORAGE}, 100);\r\n        }\r\n\r\n        cameraBtn = view.findViewById(R.id.profile_camera_image_button);\r\n        cameraBtn.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.N)\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Open camera\r\n                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n\r\n                // Ensure that there's a camera activity to handle the intent\r\n                if (intent.resolveActivity(Objects.requireNonNull(getActivity()).getPackageManager()) != null) {\r\n                    // Create the File where the photo should go\r\n                    File photoFile = null;\r\n                    try {\r\n                        photoFile = createImageFile();\r\n                    } catch (IOException ignored) {} // Error occurred while creating the File\r\n\r\n                    // Continue only if the File was successfully created\r\n                    if (photoFile != null) {\r\n                        Uri photoURI = FileProvider.getUriForFile(Objects.requireNonNull(ProfileFragment.this.m_Context),\r\n                                \"com.example.android.fileprovider\" + BuildConfig.APPLICATION_ID,\r\n                                photoFile);\r\n                        intent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);\r\n                        takePictureActivityResultLauncher.launch(intent);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        galleryBtn = view.findViewById(R.id.profile_gallery_image_button);\r\n        galleryBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Open gallery\r\n                pickFromGalleryActivityResultLauncher.launch(\"image/*\");\r\n            }\r\n        });\r\n\r\n        resetImgBtn = view.findViewById(R.id.profile_reset_button);\r\n        resetImgBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // TODO: delete image from DataBase and set dog_default_profile_rounded.png\r\n                // initialize DB.image to null.\r\n                imageView.setImageResource(R.drawable.dog_default_profile_rounded);\r\n            }\r\n        });\r\n\r\n        m_FullNameEt = view.findViewById(R.id.profile_full_name_edit_text);\r\n        m_AgeEt = view.findViewById(R.id.profile_age_edit_text);\r\n        m_radioGroup = view.findViewById(R.id.profile_radio_group);\r\n\r\n        onLoadProfile();\r\n\r\n        Button saveBtn = view.findViewById(R.id.profile_save_button);\r\n        saveBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                String fullNameInput = m_FullNameEt.getText().toString();\r\n                String tempAgeInput = m_AgeEt.getText().toString();\r\n\r\n                if(fullNameInput.equals(\"\") || tempAgeInput.equals(\"\")) {\r\n                    Toast.makeText(ProfileFragment.this.m_Context, \"Please fill in all fields\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                // TODO: add option to change image & select gender. Also show image using Glide (circle).\r\n                else {\r\n\r\n                    int ageInput = Integer.parseInt(tempAgeInput);\r\n                    m_radioButton = AppUtils.getSelectedRadioButtonFromRadioGroup(m_radioGroup, view);\r\n                    if(m_radioButton != null) // If RadioButton selected\r\n                        m_dogGender = eDogGender.valueOf(m_radioButton.getText().toString());\r\n\r\n                    // TODO: save all info in DataBase.\r\n\r\n                    getParentFragmentManager().popBackStack();\r\n                    onSaveListener.onSave();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        m_ViewModel.unregisterForEvents((IView)this);\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onLoadProfile() {\r\n        m_ViewModel.onLoadProfile();\r\n    }\r\n\r\n    @Override\r\n    public void onSuccessToLoadProfile(UserProfile i_UserProfile) {\r\n\r\n        m_FullNameEt.setText(i_UserProfile.getFullName());\r\n        m_AgeEt.setText(String.valueOf(i_UserProfile.getAge()));\r\n        if(i_UserProfile.getDogGender() == eDogGender.MALE) {\r\n            m_radioGroup.check(R.id.profile_radio_button_male);\r\n        } else {\r\n            m_radioGroup.check(R.id.profile_radio_button_female);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailureToLoadProfile(Exception i_Reason) {\r\n        Toast.makeText(m_Context, i_Reason.getMessage(), Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    // Source - https://developer.android.com/training/camera/photobasics\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    private File createImageFile() throws IOException {\r\n        // Create an image file name\r\n        @SuppressLint(\"SimpleDateFormat\")\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        String imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n        File storageDir = Objects.requireNonNull(getActivity()).getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        File image = File.createTempFile(\r\n                imageFileName,  /* prefix */\r\n                \".jpg\",         /* suffix */\r\n                storageDir      /* directory */\r\n        );\r\n\r\n        // Save a file: path for use with ACTION_VIEW intents\r\n        currentPhotoPath = image.getAbsolutePath();\r\n        return image;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/buddies/fragments/ProfileFragment.java b/app/src/main/java/com/example/buddies/fragments/ProfileFragment.java
--- a/app/src/main/java/com/example/buddies/fragments/ProfileFragment.java	(revision 4b946d46148cb6b7a2200080ed81213076f91834)
+++ b/app/src/main/java/com/example/buddies/fragments/ProfileFragment.java	(date 1652275558616)
@@ -11,8 +11,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Environment;
-import android.os.Handler;
-import android.os.Looper;
 import android.provider.MediaStore;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -75,8 +73,6 @@
     RadioButton m_radioButton;
     eDogGender m_dogGender = eDogGender.UNINITIALIZED;
 
-    Handler m_ProfileFragmentHandler = new Handler(Looper.getMainLooper());
-
     ViewModel m_ViewModel = ViewModel.getInstance();
     Context m_Context = null;
 
